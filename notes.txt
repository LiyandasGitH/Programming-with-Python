print(*objects, sep=' ', end='\n', file=sys.stdout, flush=False)

*objects - means print can take any number of objects
sep=' ' - means print will be separated by a space by default
end='\n' - means print function is going to end with a new line


SHORTCUTS FOR TERMINAL:
code hello.py - created file
python hello.py - runs program
ls - list files in folder
cp - copy file from one place to another
mv - move file or rename file
rm - remove/delete file
mkdir - make a directory that is a folder
cd - change directories from one folder to another
rmdir - remove a directory
clear(ctrl + l) - clear terminal window


BUILT-IN CONDITIONALS FOR MATH QUESTIONS:
> - greater than
>= - greater than or equal to
< - less than
<= - less than or equal to
= - assignment from right to left
== - equality, comparing from the left to the right
!= - not equal to

| - vertical bar (shift + \)

BOOLEAN OPERATORS:
or -
not - negates value of a logical expression

LOOPS:
while -
for -
list - []
continue -
break -
return -
indexing - counting starts from location 0
len - tells us the length of a list
dictionaries/dict - keys and values

ERRORS MESSAGES:
SyntaxError - problem with code
ValueError - did not follow rules of code
            - use try, except & else functions ("raise" as well)
NameError - when variables are not defined in a wrong order of operations
KeyError -
UnboundLocalError - cannot access local variable not associated w/ value
TypeError - first arg must be str or a tuple of str, not list
IndentationError - unexpected indent

breakpoints - what lines of code i want to break
pass - do nothing 


ACII (American Standard Code for Information Interchange) CODE:
(https://www.ascii-code.com) - full ACII code

allows 128 possible values (0-127)
each character ('A', '1', '?') has a corresponding interger code

'A' - 65
'Z' - 90
'a' - 97
'z' - 122
'0' - 48
'9' - 57
' '(space) - 32
'\n'(newline) - 10

            letters = [chr(i) for i in range(65, 91)]

chr(i) - converts each int to its corresponding ACII character
        ['A', 'B', ... 'Z']
        char(65) - 'A'
        char(66) - 'B'
        char(90) - 'Z'

[chr(i) for i in ...] - list comprehension to build the list
range(65, 91) - generates ints from 65 to 90 (inclusive)


